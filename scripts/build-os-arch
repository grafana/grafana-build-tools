#!/bin/sh

set -e
set -u

OPTS=$(getopt -o bi: --long build:,no-build,image: -- "$@")

if [ $? != 0 ] ; then
	echo "E: Invalid options. Stop."
	exit 1
fi

eval set -- "$OPTS"

do_build=true

while true ; do
	case "$1" in
		-b)
			do_build=true
			shift
			;;

		--no-build)
			do_build=false
			shift
			;;

		--build)
			do_build="$2"
			shift 2
			;;

		-i|--image)
			image_name="$2"
			shift 2
			;;

		--)
			shift
			break
			;;

		*)
			# It should never get here.
			echo "E: Internal error. Stop."
			exit 1
			;;
	esac
done

set -x

target_os=${1:-}
target_arch=${2:-}

if test -z "${target_os}" ; then
	echo "E: Missing target OS. Stop."
	exit 1
fi

if test -z "${target_arch}" ; then
	echo "E: Missing target arch. Stop."
	exit 1
fi

image_name="${image_name:-build:${target_os}-${target_arch}}"
container_name="container-${target_os}-${target_arch}"

if "${do_build}" ; then
	docker build . \
		--file Dockerfile.build \
		--tag "${image_name}" \
		--build-arg TARGET_GOOS="${target_os}" \
		--build-arg TARGET_GOARCH="${target_arch}"
fi

docker create --name "${container_name}" "${image_name}"

trap 'docker rm "${container_name}"' EXIT

mkdir -p dist/"${target_os}"-"${target_arch}"

# Extract everything in the dist directory of the image.
docker export "${container_name}" |
	tar -C dist/"${target_os}"-"${target_arch}" --strip-components=1 -xf - dist
