name: "Publish container image"

on:
  push:
    tags: 
      - v*

  release:
    types:
      - published

  workflow_dispatch:

permissions:
  contents: none
  packages: none

jobs:
  build:
    name: Build binaries
    runs-on: ubuntu-latest-8-cores
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          # fetch-tags: true
          persist-credentials: false

      - name: Unshallow
        run: git fetch --force --prune --tags --unshallow

      - name: Describe the current state
        run: git describe --tags --always

      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5.7.0
        with:
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=sha-${{ github.sha }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0

      - name: Login to GitHub Package Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate Dockerfile
        run: make Dockerfile Dockerfile.build

      - name: Build auxiliary image and export to docker (linux/amd64)
        uses: docker/build-push-action@1dc73863535b631f98b2378be8619f83b136f4a0 # v6.17.0
        with:
          context: .
          file: ./Dockerfile.build
          push: false
          load: true
          tags: binaries:local-linux-amd64
          build-args: |
            TARGET_GOOS=linux
            TARGET_GOARCH=amd64
          cache-from: type=gha,scope=build-linux-amd64
          cache-to: type=gha,mode=max,scope=build-linux-amd64

      - name: Build auxiliary image and export to docker (linux/arm64)
        uses: docker/build-push-action@1dc73863535b631f98b2378be8619f83b136f4a0 # v6.17.0
        with:
          context: .
          file: ./Dockerfile.build
          push: false
          load: true
          tags: binaries:local-linux-arm64
          build-args: |
            TARGET_GOOS=linux
            TARGET_GOARCH=arm64
          cache-from: type=gha,scope=build-linux-amd64
          cache-to: type=gha,mode=max,scope=build-linux-arm64

      - name: Capture binaries
        run: |
          ./scripts/build-os-arch --image binaries:local-linux-amd64 --no-build linux amd64
          ./scripts/build-os-arch --image binaries:local-linux-arm64 --no-build linux arm64
          tar -czf dist/binaries.tar.gz dist/linux-amd64 dist/linux-arm64

      - name: Archive binaries
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: binaries
          path: dist/binaries.tar.gz
          retention-days: 1

  publish:
    name: Publish container images
    runs-on: ubuntu-latest-8-cores
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write
    needs: build
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: Unshallow
        run: git fetch --prune --unshallow

      - name: Describe the current state
        run: git describe --tags --always

      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5.7.0
        with:
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{raw}}
            type=sha

      - name: Generate Dockerfile
        run: |
          make Dockerfile

      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0
        # with:
        #   config: .github/workflows/buildkitd.toml

      - name: Login to GitHub Package Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Retrieve binaries
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: binaries

      - name: Load binaries
        run: |
          find . -type f -print0 | xargs -0r ls -ld
          tar -xzf binaries.tar.gz

      - name: Build image (linux/amd64)
        uses: docker/build-push-action@1dc73863535b631f98b2378be8619f83b136f4a0 # v6.17.0
        with:
          context: .
          file: ./Dockerfile
          push: false
          load: true
          platforms: linux/amd64
          tags: test:local
          cache-from: type=gha,scope=final

      - name: Test image
        run: |
          docker run --rm test:local image-test

      - name: Build and push image
        id: push
        uses: docker/build-push-action@1dc73863535b631f98b2378be8619f83b136f4a0 # v6.17.0
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name == 'push' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          cache-from: type=gha,scope=final
          cache-to: type=gha,mode=max,scope=final

      - name: Write attestations
        uses: actions/attest-build-provenance@db473fddc028af60658334401dc6fa3ffd8669fd # v2.3.0
        id: attest
        with:
          subject-name: ghcr.io/${{ github.repository }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
