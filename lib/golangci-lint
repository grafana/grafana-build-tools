#!/bin/sh
#
# This is a wrapper around golangci-lint that selects the correct version of
# golangci-lint based on the version specified in the configuration file.
#
# This is needed because the configuration file format changed with version 2,
# and it's neither forwards- nor backwards-compatible, and they decided to keep
# the same filename for both versions.

set -e
set -u

# Assume version 1 of golangci-lint is able to locate the configuration file.
# This command fails with version 2 because it tries to validate the file.
config_file=$(golangci-lint-v1 config path 2>&1 || true)

# golangci-lint returns an error in stderr. It *also* returns the name of the
# configuration file in stderr, meaning we might have an error or a filename.
# Assume we have v2, and if we get an existing file, try to read it and get the
# actual version in it, if any.

config_file_version=2

if test -n "${config_file}" -a -e "${config_file}" ; then
	config_file_version=$(yq '.version' "${config_file}")
fi

case "${config_file_version}" in
	2)
		# We have version 2
		golangci_lint=golangci-lint-v2
		;;

	null|1)
		# We have version 1
		golangci_lint=golangci-lint-v1
	;;

	*)
		echo "E: Found version '${config_file_version}' in configuration file ${config_file}. I don't know how to handle that. Stop."
		exit 1
	;;
esac

exec "${golangci_lint}" "$@"
